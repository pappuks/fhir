id {
  value: "CapabilityStatement-versions"
}
meta {
  last_updated {
    value_us: 1545910674724000
    timezone: "+11:00"
    precision: MILLISECOND
  }
}
text {
  status {
    value: GENERATED
  }
  div {
    value: "<div xmlns=\"http://www.w3.org/1999/xhtml\">\n            <h2>Discover what versions a server supports</h2>\n            <p>OPERATION: Discover what versions a server supports</p>\n            <p>The official URL for this operation definition is: </p>\n            <pre>http://hl7.org/fhir/OperationDefinition/CapabilityStatement-versions</pre>\n            <div>\n              <p>Using the \n                <a href=\"http.html#version-parameter\">FHIR Version Mime Type Parameter</a>, a server can support \n                <a href=\"versioning.html#mt-version\">multiple versions on the same end-point</a>. The only way for client to find out what versions a server supports in this fashion is the $versions operation. The client invokes the operation with no parameters. and the server returns the list of supported versions, along with the default version it will use if no fhirVersion parameter is present\n              </p>\n\n            </div>\n            <p>URL: [base]/$versions</p>\n            <p>Parameters</p>\n            <table class=\"grid\">\n              <tr>\n                <td>\n                  <b>Use</b>\n                </td>\n                <td>\n                  <b>Name</b>\n                </td>\n                <td>\n                  <b>Cardinality</b>\n                </td>\n                <td>\n                  <b>Type</b>\n                </td>\n                <td>\n                  <b>Binding</b>\n                </td>\n                <td>\n                  <b>Documentation</b>\n                </td>\n              </tr>\n              <tr>\n                <td>OUT</td>\n                <td>version</td>\n                <td>1..*</td>\n                <td>\n                  <a href=\"datatypes.html#code\">code</a>\n                </td>\n                <td/>\n                <td>\n                  <div>\n                    <p>A version supported by the server. Use the major.minor version like 3.0</p>\n\n                  </div>\n                </td>\n              </tr>\n              <tr>\n                <td>OUT</td>\n                <td>default</td>\n                <td>1..1</td>\n                <td>\n                  <a href=\"datatypes.html#code\">code</a>\n                </td>\n                <td/>\n                <td>\n                  <div>\n                    <p>The default version for the server. Use the major.minor version like 3.0</p>\n\n                  </div>\n                </td>\n              </tr>\n            </table>\n            <div/>\n          </div>"
  }
}
extension {
  url {
    value: "http://hl7.org/fhir/StructureDefinition/structuredefinition-fmm"
  }
  value {
    integer {
      value: 5
    }
  }
}
extension {
  url {
    value: "http://hl7.org/fhir/StructureDefinition/structuredefinition-standards-status"
  }
  value {
    code {
      value: "trial-use"
    }
  }
}
url {
  value: "http://hl7.org/fhir/OperationDefinition/CapabilityStatement-versions"
}
version {
  value: "4.0.0"
}
name {
  value: "Discover what versions a server supports"
}
status {
  value: DRAFT
}
kind {
  value: OPERATION
}
date {
  value_us: 1545910674000000
  timezone: "+11:00"
  precision: SECOND
}
publisher {
  value: "HL7 (FHIR Project)"
}
contact {
  telecom {
    system {
      value: URL
    }
    value {
      value: "http://hl7.org/fhir"
    }
  }
  telecom {
    system {
      value: EMAIL
    }
    value {
      value: "fhir@lists.hl7.org"
    }
  }
}
description {
  value: "Using the [FHIR Version Mime Type Parameter](http.html#version-parameter), a server can support [multiple versions on the same end-point](versioning.html#mt-version). The only way for client to find out what versions a server supports in this fashion is the $versions operation. The client invokes the operation with no parameters. and the server returns the list of supported versions, along with the default version it will use if no fhirVersion parameter is present"
}
code {
  value: "versions"
}
resource {
  value: CAPABILITY_STATEMENT
}
system {
  value: true
}
type {
}
instance {
}
parameter {
  name {
    value: "version"
  }
  use {
    value: OUT
  }
  min {
    value: 1
  }
  max {
    value: "*"
  }
  documentation {
    value: "A version supported by the server. Use the major.minor version like 3.0"
  }
  type {
    value: CODE
  }
}
parameter {
  name {
    value: "default"
  }
  use {
    value: OUT
  }
  min {
    value: 1
  }
  max {
    value: "1"
  }
  documentation {
    value: "The default version for the server. Use the major.minor version like 3.0"
  }
  type {
    value: CODE
  }
}
